import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '2.0.20-RC'
    id "org.jetbrains.kotlin.plugin.spring" version "2.0.20-RC" // simplifies spring proxying
}

group = 'com.apress'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.spring.io/milestone')
    }

    maven {
        url = uri('https://repo.spring.io/snapshot')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

//    api 'org.springframework.boot:spring-boot-starter-web:3.2.2'
//    api 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.0-SNAPSHOT'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.2'

    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.0-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//    kotlin {
//	    jvmToolchain(17)
//    }
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}


//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}
//
//tasks.withType(Javadoc) {
//    options.encoding = 'UTF-8'
//}
